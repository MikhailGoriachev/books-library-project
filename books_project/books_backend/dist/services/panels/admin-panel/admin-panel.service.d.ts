/// <reference types="multer" />
import { NotFoundException } from '@nestjs/common';
import { UsersService } from '../../../database/services/users/users.service';
import { BlockedUsersService } from '../../../database/services/blocked-users/blocked-users.service';
import { BlockedUser } from '../../../database/entities/BlockedUser';
import { UserRoleDto } from '../../../dto/user-role.dto';
import { RolesService } from '../../../database/services/roles/roles.service';
import { Role } from '../../../database/entities/Role';
import { BookEditDto } from '../../../dto/admin-panel/book/book-edit.dto';
import { BooksService } from '../../../database/services/books/books.service';
import { AuthorsService } from '../../../database/services/authors/authors.service';
import { CategoriesService } from '../../../database/services/categories/categories.service';
import { Book } from '../../../database/entities/Book';
import { BookCreateDto } from '../../../dto/admin-panel/book/book-create.dto';
import { BookViewStatisticsService } from '../../../database/services/book-view-statistics/book-view-statistics.service';
import { BookRatingStatisticsService } from '../../../database/services/book-rating-statistics/book-rating-statistics.service';
import { BookFilesService } from '../../../database/services/book-files/book-files.service';
import { UserCartItemsService } from '../../../database/services/user-cart-items/user-cart-items.service';
import { Author } from '../../../database/entities/Author';
import { AuthorCreateDto } from '../../../dto/admin-panel/author/author-create.dto';
import { AuthorViewStatisticsService } from '../../../database/services/author-view-statistics/author-view-statistics.service';
import { AuthorEditDto } from '../../../dto/admin-panel/author/author-edit.dto';
export declare class AdminPanelService {
    private readonly _usersService;
    private readonly _blockedUsersService;
    private readonly _rolesService;
    private readonly _booksService;
    private readonly _authorsService;
    private readonly _authorViewStatisticsService;
    private readonly _categoriesService;
    private readonly _bookViewStatisticsService;
    private readonly _bookRatingStatisticsService;
    private readonly _bookFilesService;
    private readonly _userCartItemsService;
    constructor(_usersService: UsersService, _blockedUsersService: BlockedUsersService, _rolesService: RolesService, _booksService: BooksService, _authorsService: AuthorsService, _authorViewStatisticsService: AuthorViewStatisticsService, _categoriesService: CategoriesService, _bookViewStatisticsService: BookViewStatisticsService, _bookRatingStatisticsService: BookRatingStatisticsService, _bookFilesService: BookFilesService, _userCartItemsService: UserCartItemsService);
    blockUser(userId: number): Promise<BlockedUser>;
    unblockUser(userId: number): Promise<BlockedUser>;
    addUserRole(userRole: UserRoleDto): Promise<void>;
    removeUserRole(userRole: UserRoleDto): Promise<void>;
    userRoles(userId: number): Promise<Role[]>;
    uploadFile(file: Express.Multer.File, path: string, fileName: string): Promise<string>;
    createBook(bookCreateDto: BookCreateDto): Promise<Book>;
    editBook(bookEditDto: BookEditDto): Promise<Book>;
    deleteBookFile(id: number): Promise<NotFoundException>;
    deleteBook(id: number): Promise<NotFoundException>;
    restoreBook(id: number): Promise<NotFoundException>;
    createAuthor(authorCreateDto: AuthorCreateDto): Promise<Author>;
    editAuthor(authorEditDto: AuthorEditDto): Promise<Author>;
    deleteAuthor(id: number): Promise<NotFoundException>;
    restoreAuthor(id: number): Promise<NotFoundException>;
}
